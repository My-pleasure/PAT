#include<cstdio>
#include<algorithm>
using namespace std;
const int maxn=101;
int heap[maxn];
void downAjust(int low,int high)
{
	int i=low,j=2*i;
	while(j<=high)
	{
		if(j+1<=high&&heap[j+1]>heap[j])
		{
			j=j+1;
		}
		if(heap[j]>heap[i])
		{
			swap(heap[i],heap[j]);
			i=j;
			j=2*i;
		}
		else break;
	}
}
void createHeap()
{
	for(int i=n/2;i>=1;--i)
	{
		downAjust(i,n);
	}
}
void deletetop()
{
	heap[1]=heap[n--];
	downAjust(1,n);
}
void upAjust(int low,int high)
{
	int i=high,j=i/2;
	while(j>=low)
	{
		if(heap[j]<heap[i])
		{
			swap(heap[i],heap[j]);
			i=j;
			j=i/2;
		}
		else break;
	}
}
void insert(int x)
{
	heap[++n]=x;
	upAjust(1,n);
}
void sort()
{
	createHeap();
	for(int i=n;i>1;--i)
	{
		swap(heap[1],heap[i]);
		downAjust(1,i-1);
	}
}
int main()
{
	
}
