#include<cstdio>
#include<iostream>
using namespace std;
const int maxn=10001;
//斐波那契数列 
int dp[maxn];
int F(int n)
{
	if(n==0||n==1) return 1;
	if(dp[n]!=-1) return dp[n];
	else
	{
		dp[n]=F(n-1)+F[n-2];
		return dp[n];
	}
}
//数塔
int dp[maxn][maxn],f[maxn][maxn]; 
int main()
{
	int n;
	for(int i=1;i<=n;++i)
	{
		for(int j=1;j<=i;++j)
		{
			cin>>f[i][j];
		}
	}
	//递推边界
	for(int i=1;i<=n;++i)
	{
		dp[n][i]=f[n][i];
	}
	for(int i=n-1;i>0;--i)
	{
		for(int j=1;j<=i;++j)
		{
			dp[i][j]=max(dp[i+1][j],dp[i+1][j+1])+f[i][j];
		}
	}
	cout<<dp[1][1];
}
