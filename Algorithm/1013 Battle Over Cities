 #include<cstdio>
#include<cstring>
#include<vector>
using namespace std;
const int maxn=1001;
int n,m,k;
int broken;
bool vis[maxn]={false};
vector<int> G[maxn];
void DFS(int u)
{
	if(u==broken) return;
	vis[u]=true;
	for(int i=0;i<G[u].size();++i)
	{
		int v=G[u][i];
		if(vis[v]==false)
		{
			DFS(v);
		}
	}
}
int main()
{
	int a,b;
	scanf("%d%d%d",&n,&m,&k);
	for(int i=0;i<m;++i)
	{
		scanf("%d%d",&a,&b);
		G[a].push_back(b);
		G[b].push_back(a);
	}
	for(int i=0;i<k;++i)
	{
		scanf("%d",&broken);
		memset(vis,false,sizeof(vis));
		int block=0;
		for(int u=1;u<=n;++u)
		{
			if(broken!=u&&vis[u]==false)
			{
				DFS(u);
				++block;
			}	
		}
		printf("%d\n",block-1);
	}
}
