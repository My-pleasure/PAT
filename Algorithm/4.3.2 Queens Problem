#include<iostream>
#include<cmath>
using namespace std;
int cnt = 0, n, p[50], hashtable[50];
//暴力法
void genBaoli(int index)
{
	if (index == n + 1)
	{
		bool flag = true;
		for (int i = 1; i <= n; ++i)
		{
			for (int j = i + 1; j <= n; ++j)
			{
				if (abs(i - j) == abs(p[i] - p[j])) flag = false;
			}
		}
		if (flag) cnt++;
		return;
	}
	for (int x = 1; x <= n; ++x)
	{
		if (hashtable[x] == false)
		{
			p[index] = x;
			hashtable[x] = true;
			genBaoli(index + 1);
			hashtable[x] = false;
		}
	}
}
//回溯法
void genHuiShuo(int index)
{
	if (index == n + 1)
	{
		cnt++;
		return;
	}
	for (int x = 1; x <= n; ++x)
	{
		if (hashtable[x] == false)
		{
			bool flag = true;
			for (int pre = 1; pre < index; ++pre)
			{
				if (abs(index - pre) == abs(x - p[pre]))
				{
					flag = false;
					break;
				}
			}
			if (flag)
			{
				p[index] = x;
				hashtable[x] = true;
				genHuiShuo(index + 1);
				hashtable[x] = false;
			}
		}
	}
}
int main()
{
	cin >> n;
//	genBaoli(1);
	genHuiShuo(1);
	printf("%d", cnt);
}
