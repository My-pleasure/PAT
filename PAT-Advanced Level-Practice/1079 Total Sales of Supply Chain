#include<iostream>
#include<vector> 
#include<cmath>
using namespace std;
const int maxn=100010;
int N,dep;
double P,r,ans=0;
struct Node
{
	int data;
	vector<int> child;
}node[maxn];
void DFS(int root,int dep)
{
	if(node[root].child.size()==0)
	{
		ans+=node[root].data*pow(1+r/100,dep);
	}
	for(int i=0;i<node[root].child.size();++i)
	{
		DFS(node[root].child[i],dep+1);
	}
}
int main()
{
	int t,temp;
	scanf("%d%lf%lf",&N,&P,&r);
	for(int i=0;i<N;++i)
	{
		scanf("%d",&t);
		if(t==0)
		{
			scanf("%d",&temp);
			node[i].data=temp;
		}
		else
		{
			for(int j=0;j<t;++j)
			{
				scanf("%d",&temp);
				node[i].child.push_back(temp);
			}
		}
	}
	DFS(0,0);
	printf("%.1lf",P*ans);
}
