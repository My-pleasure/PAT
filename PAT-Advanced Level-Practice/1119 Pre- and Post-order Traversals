#include<iostream>
using namespace std;
int n, num = 0;
int pre[31], post[31], in[31];
bool unique = true;
void inOrder(int preL, int preR, int postL, int postR)
{
	if (preL == preR)
	{
		in[num++] = pre[preL];
		return;
	}
	if (pre[preL] == post[postR])
	{
		int i;
		for (i = preL + 1; i <= preR; ++i)
		{
			if (pre[i] == post[postR - 1]) break;
		}
		int numLeft = i - preL - 1;
		if (numLeft > 0)
		{
			inOrder(preL + 1, i - 1, postL, postL + numLeft - 1);
		}
		else unique = false;
		in[num++] = post[postR];
		inOrder(i, preR, postL + numLeft, postR - 1);
	}
}
int main()
{
	scanf("%d", &n);
	for (int i = 0; i < n; ++i)
	{
		scanf("%d", &pre[i]);
	}
	for (int i = 0; i < n; ++i)
	{
		scanf("%d", &post[i]);
	}
	inOrder(0, n - 1, 0, n - 1);
	if (unique == false) printf("No\n");
	else printf("Yes\n");
	for (int i = 0; i < n; ++i)
	{
		printf("%d", in[i]);
		if (i < n - 1) printf(" ");
	}
	printf("\n");
	return 0;
}
