#include<iostream>
#include<algorithm>
using namespace std;
int father[10010];
int findFather(int x)
{
	while (x != father[x])
	{
		x = father[x];
	}
	return x;
}
void Union(int a, int b)
{
	int faA = findFather(a);
	int faB = findFather(b);
	if (faA != faB) father[faA] = faB;
}
int main()
{
	int N, k, a, b, Max = 0;
	for (int i = 0; i < 10010; ++i)
	{
		father[i] = i;
	}
	scanf("%d", &N);
	for (int i = 0; i < N; ++i)
	{
		scanf("%d", &k);
		if (k >= 2)
		{
			scanf("%d%d", &a, &b);
			Union(a, b);
			Max = max(Max, a);
			Max = max(Max, b);
			for (int j = 2; j < k; ++j)
			{
				scanf("%d", &b);
				Union(a, b);
				Max = max(Max, b);
			}
		}
		else
		{
			scanf("%d", &a);
			Max = max(Max, a);
		}
	}
	int cnt = 0;
	for (int i = 1; i <= Max; ++i)
	{
		if (father[i] == i)
		{
			cnt++;
		}
	}
	printf("%d %d\n", cnt, Max);
	int q;
	scanf("%d", &q);
	for (int i = 0; i < q; ++i)
	{
		scanf("%d%d", &a, &b);
		if (findFather(a) == findFather(b))
		{
			printf("Yes\n");
		}
		else
		{
			printf("No\n");
		}
	}
}
