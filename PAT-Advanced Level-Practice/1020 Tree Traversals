#include<iostream>
#include<queue>
using namespace std;
struct node
{
	int data;
	node* lchild;
	node* rchild;
};
int post[31],in[31],lay[31],lnum=0;
node *Create(int postL,int postR,int inL,int inR)
{
	if(postL>postR) return NULL;
	node* root=new node;
	root->data=post[postR];
	int k;
	for(k=inL;k<=inR;++k)
	{
		if(in[k]==post[postR]) break;
	}
	int numLeft=k-inL;
	root->lchild=Create(postL,postL+numLeft-1,inL,k-1);
	root->rchild=Create(postL+numLeft,postR-1,k+1,inR);
	return root;
}
void LayerOrder(node* root)
{
	queue<node*> q;
	q.push(root);
	while(!q.empty())
	{
		node* now=q.front();
		q.pop();
		lay[lnum++]=now->data;
		if(now->lchild!=NULL) q.push(now->lchild);
		if(now->rchild!=NULL) q.push(now->rchild);
	} 
}
int main()
{
	int N;
	scanf("%d",&N);
	for(int i=0;i<N;++i)
	{
		scanf("%d",&post[i]);
	}
	for(int i=0;i<N;++i)
	{
		scanf("%d",&in[i]);
	}
	node* root=new node;
	root=Create(0,N-1,0,N-1);
	LayerOrder(root);
	for(int i=0;i<N;++i)
	{
		if(i!=N-1) printf("%d ",lay[i]);
		else printf("%d",lay[i]);
	}
}
