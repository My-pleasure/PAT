#include<iostream>
#include<algorithm>
#include<cmath>
#include<vector>
using namespace std;
vector<int> temp,ans;
int x,k,p;
int maxsum;
bool comp(vector<int> &a,vector<int> b)
{
	for(int i=0;i<a.size();++i)
	{
		if(a[i]==b[i]) continue;
		else if(a[i]<b[i]) a=b;
		else return true;
	}
}
void DFS(int index,int nowk,int fa,int sum)
{
	if(nowk==k&&fa==x)
	{
		if(maxsum<sum)
		{
			maxsum=sum;
			ans=temp;
		}
		else if(maxsum==sum&&ans.size()!=0)
		{
			comp(ans,temp);
		}
		return;
	}
	if(index<1||fa>x||nowk>k) return;
	temp.push_back(index);
	DFS(index,nowk+1,fa+pow(index,p),sum+index);
	temp.pop_back();
	DFS(index-1,nowk,fa,sum);
}
int main()
{
	scanf("%d%d%d",&x,&k,&p);
	DFS(20,0,0,0);
	if(ans.size()==0) printf("Impossible");
	else
	{
		printf("%d =",x);
		for(int i=0;i<ans.size()-1;++i)
		{
			printf(" %d",ans[i]);
			printf("^%d +",p);
		}
		printf(" %d^%d",ans[ans.size()-1],p);
	}
}
