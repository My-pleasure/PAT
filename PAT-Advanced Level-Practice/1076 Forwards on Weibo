#include<iostream>
#include<vector>
#include<queue>
using namespace std;
int n,l;
const int maxn=1001;
struct node
{
	int id;
	int lay;
};
vector<node> Adj[maxn];
bool inq[maxn]={false};
int BFS(int u,int numfo)
{
	queue<node> q;
	node start;
	start.id=u;
	start.lay=0;
	q.push(start);
	inq[u]=true;
	while(!q.empty())
	{
		node now=q.front();
		q.pop();
		for(int i=0;i<Adj[now.id].size();++i)
		{
			node next=Adj[now.id][i];
			next.lay=now.lay+1;
			if(inq[next.id]==false&&next.lay<=l)
			{
				inq[next.id]=true;
				q.push(next);
				++numfo;
			}
		}
	}
	return numfo;
}
int main()
{
	int k,t;
	node user;
	scanf("%d%d",&n,&l);
	for(int i=1;i<=n;++i)
	{
		user.id=i;
		scanf("%d",&k);
		for(int j=0;j<k;++j)
		{
			scanf("%d",&t);
			Adj[t].push_back(user);
		}
	}
	int qnum,query;
	scanf("%d",&qnum);
	for(int i=0;i<qnum;++i)
	{
		fill(inq,inq+maxn,false);
		scanf("%d",&query);
		int num=BFS(query,0);
		printf("%d\n",num);
	}
}
