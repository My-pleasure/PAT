#include<iostream>
#include<vector>
#include<cmath>
using namespace std;
const int maxn=100010;
int N,mindep=maxn,num=0;
double P,r;
vector<int> child[maxn];
void DFS(int root,int dep)
{
	if(child[root].size()==0)
	{
		if(mindep>dep)
		{
			mindep=dep;
			num=1;
		}
		else if(mindep==dep)
		{
			++num;
		}
	}
	for(int i=0;i<child[root].size();++i)
	{
		DFS(child[root][i],dep+1);
	}
}
int main()
{
	int k,t;
	scanf("%d%lf%lf",&N,&P,&r);
	for(int i=0;i<N;++i)
	{
		scanf("%d",&k);
		if(k==0) continue;
		else
		{
			for(int j=0;j<k;++j)
			{
				scanf("%d",&t);
				child[i].push_back(t);
			}
		}
	}
	DFS(0,0);
	printf("%.4lf %d",P*pow(1+r/100,mindep),num);
}
