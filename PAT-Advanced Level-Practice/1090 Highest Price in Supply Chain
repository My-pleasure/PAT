#include<iostream>
#include<vector> 
#include<cmath>
using namespace std;
const int maxn=100010;
int N,root,maxdep=0,num=0;
double P,r;
vector<int> child[maxn];
void DFS(int root,int dep)
{
	if(child[root].size()==0)
	{
		if(dep>maxdep)
		{
			maxdep=dep;
			num=1;
		}
		else if(dep==maxdep) ++num;
	}
	for(int i=0;i<child[root].size();++i)
	{
		DFS(child[root][i],dep+1);
	}
}
int main()
{
	scanf("%d%lf%lf",&N,&P,&r);
	int temp;
	for(int i=0;i<N;++i)
	{
		scanf("%d",&temp);
		if(temp!=-1)
		{
			child[temp].push_back(i);
		}
		else root=i;
	}
	DFS(root,0);
	printf("%.2lf %d",P*pow(1+r/100,maxdep),num);
}
