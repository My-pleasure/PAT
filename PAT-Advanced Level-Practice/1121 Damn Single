#include<iostream>
#include<set>
using namespace std;
int hashtable[100000], flag[100000];
set<int> s;
int main()
{
	int N, a, b, M;
	fill(hashtable,hashtable+100000,-1);
	fill(flag,flag+100000,-1);
	scanf("%d", &N);
	for (int i = 0; i < N; ++i)
	{
		scanf("%d%d", &a, &b);
		hashtable[a] = b;
		hashtable[b] = a;
	}
	scanf("%d", &M);
	int A[10005];
	for (int i = 0; i < M; ++i)
	{
		scanf("%d", &A[i]);
		if (hashtable[A[i]] != -1)
		{
		  flag[hashtable[A[i]]]=1;
		}
	}
	for (int i = 0; i < M; ++i)
	{
		if (flag[A[i]] == -1)
		{
			s.insert(A[i]);
		}
	}
	printf("%d\n", s.size());
	for (set<int>::iterator it = s.begin(); it != s.end(); ++it)
	{
	  if (it!=s.begin()) printf(" ");
		printf("%05d", *it);
	}
}
