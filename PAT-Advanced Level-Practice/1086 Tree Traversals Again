#include<iostream>
#include<queue>
#include<stack>
#include<cstring>
using namespace std;
struct node
{
	int data;
	node* lchild;
	node* rchild;
};
int N,num=0;
int pre[31],in[31],inum=0,pnum=0;
node* Create(int preL,int preR,int inL,int inR)
{
	if(preL>preR) return NULL;
	node* root=new node;
	root->data=pre[preL];
	int k;
	for(k=inL;k<=inR;++k)
	{
		if(in[k]==pre[preL]) break;
	}
	int numLeft=k-inL;
	root->lchild=Create(preL+1,preL+numLeft,inL,k-1);
	root->rchild=Create(preL+numLeft+1,preR,k+1,inR);
	return root;
}
void post(node* root)
{
	if(root==NULL) return;
	else
	{
		post(root->lchild);
		post(root->rchild);
		printf("%d",root->data);
		num++;
		if(num<N) printf(" ");
	}
}
int main()
{
	char temp[5];
	int t;
	stack<int> st;
	scanf("%d",&N);
	for(int i=0;i<2*N;++i)
	{
		scanf("%s",&temp);
		if(strcmp(temp,"Push")==0)
		{
			scanf("%d",&t);
			pre[pnum++]=t;
			st.push(t);
		}
		else
		{
			in[inum++]=st.top();
			st.pop();
		}
	}
	node* root=new node;
	root=Create(0,N-1,0,N-1);
	post(root);
	return 0;
}
