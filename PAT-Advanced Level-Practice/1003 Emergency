#include<iostream>
#include<vector> 
using namespace std;
int n,m,S,T;
const int maxn=501;
const int INF=1000000000;
int G[maxn][maxn],w[maxn],d[maxn],weight[maxn],num[maxn];
bool vis[maxn]={false};
void dijkstra(int s)
{
	fill(d,d+maxn,INF);
	fill(w,w+maxn,0);
	fill(num,num+maxn,0);
	d[s]=0;
	w[s]=weight[s];
	num[s]=1;
	for(int i=0;i<n;++i)
	{
		int u=-1,MIN=INF;
		for(int j=0;j<n;++j)
		{
			if(vis[j]==false&&d[j]<MIN)
			{
				u=j;
				MIN=d[j];
			}
		}
		if(u==-1) return;
		vis[u]=true;
		for(int v=0;v<n;++v)
		{
			if(vis[v]==false&&G[u][v]!=INF)
			{
				if(d[v]>d[u]+G[u][v])
				{
					d[v]=d[u]+G[u][v];
					w[v]=w[u]+weight[v];
					num[v]=num[u];
				}
				else if(d[v]==d[u]+G[u][v])
				{
					if(w[v]<w[u]+weight[v])
					{
						w[v]=w[u]+weight[v];
					}
					num[v]+=num[u];
				}
			}
		}
	}
}
int main()
{
	int u,v,we;
	scanf("%d%d%d%d",&n,&m,&S,&T);
	fill(G[0],G[0]+maxn*maxn,INF);
	for(int i=0;i<n;++i)
	{
		scanf("%d",&weight[i]);
	}
	for(int i=0;i<m;++i)
	{
		scanf("%d%d%d",&u,&v,&we);
		G[u][v]=we;
		G[v][u]=we;
	}
	dijkstra(S);
	printf("%d %d",num[T],w[T]);
}
